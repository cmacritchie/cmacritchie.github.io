{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\747049\\\\Desktop\\\\craigio\\\\pages\\\\framework\\\\devops.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import React from 'react'\nimport PageLayout from '../../HOC/pageLayout'; // import \"../css/style.css\"\n\nconst pageDetails = {\n  title: 'DevOps',\n  back: '/#skills',\n  next: '/framework/python',\n  nextTitle: 'Python'\n};\n\nconst DevOps = () => {\n  return __jsx(PageLayout, {\n    pageDetails: pageDetails,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"In 2019 after putting together a couple of projects I learned about DevOps and how it can expedite repetitive tasks, shorten systems development life cycle, and provide solid software quality with continuous delivery.\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"devops photo\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Agile Software development and DevOps are two methodologies that go hand in hand to deliver quality software. Professionally, I have worked in a Agile software environment where we would conduct daily scrums, two week sprints, and code reviews. JIRA software was used to track issues throughout the development process\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"I use git and github which aligns with the majority of developers who use source control and online repository solutions. Professionally, I have used Azure DevOps to build, test, conduct pull request, and deploy code with Continuous Intergration (CI) and Continuous Deployment (CD) pipelines.\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"docker pic?\")), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"In early 2020, I began exploring Docker and DockerHub. I created containers for front-end UI servers and backend Node.js Servers and used an NGINX to route requests to the backend and front end servers. Next I used Travis CI to set up a continuous integration pipeline.\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Although, I am not an expert in DevOps, I aspire to learn more and have made improving DevOps practices my primary goal for 2020.\"));\n};\n\nconst details = {\n  page: 'Docker'\n};\nexport default DevOps;","map":{"version":3,"sources":["C:/Users/747049/Desktop/craigio/pages/framework/devops.js"],"names":["PageLayout","pageDetails","title","back","next","nextTitle","DevOps","details","page"],"mappings":";;;AAAA;AACA,OAAOA,UAAP,MAAuB,sBAAvB,C,CACA;;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,KAAK,EAAE,QADS;AAEhBC,EAAAA,IAAI,EAAC,UAFW;AAGhBC,EAAAA,IAAI,EAAC,mBAHW;AAIhBC,EAAAA,SAAS,EAAC;AAJM,CAApB;;AAOA,MAAMC,MAAM,GAAG,MAAM;AACjB,SACI,MAAC,UAAD;AAAY,IAAA,WAAW,EAAEL,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iOADJ,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CANJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sUATJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4SAdJ,EAmBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAH,CAnBJ,EAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qRApBJ,EAyBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yIAzBJ,CADJ;AAgCH,CAjCD;;AAmCA,MAAMM,OAAO,GAAG;AACZC,EAAAA,IAAI,EAAE;AADM,CAAhB;AAIA,eAAeF,MAAf","sourcesContent":["// import React from 'react'\r\nimport PageLayout from '../../HOC/pageLayout'\r\n// import \"../css/style.css\"\r\nconst pageDetails = {\r\n    title: 'DevOps',\r\n    back:'/#skills',\r\n    next:'/framework/python',\r\n    nextTitle:'Python'\r\n  }\r\n\r\nconst DevOps = () => {\r\n    return (\r\n        <PageLayout pageDetails={pageDetails}>\r\n            <p>\r\n                In 2019 after putting together a couple of projects I learned about DevOps and how it can \r\n                expedite repetitive tasks, shorten systems development life cycle, and provide solid\r\n                software quality with continuous delivery.\r\n            </p>\r\n            <p>\r\n                <b>devops photo</b>\r\n            </p>\r\n            <p>\r\n                Agile Software development and DevOps are two methodologies that go hand in hand to deliver quality software.\r\n                Professionally, I have worked in a Agile software environment where we would conduct daily scrums, two\r\n                week sprints, and code reviews. JIRA software was used to track issues throughout the development process\r\n            </p>\r\n            <p>\r\n                I use git and github which aligns with the majority of developers who use source control and\r\n                online repository solutions. Professionally, I have used Azure DevOps to build, test, conduct pull \r\n                request, and deploy code with Continuous Intergration (CI) and Continuous Deployment (CD) pipelines.\r\n            </p>\r\n            <p><b>docker pic?</b></p>\r\n            <p>\r\n                In early 2020, I began exploring Docker and DockerHub. I created containers for front-end UI servers and\r\n                backend Node.js Servers and used an NGINX to route requests to the backend and front end servers. Next I used\r\n                Travis CI to set up a continuous integration pipeline. \r\n            </p>\r\n            <p>\r\n                Although, I am not an expert in DevOps, I aspire to learn more and have made improving DevOps \r\n                practices my primary goal for 2020. \r\n            </p>\r\n        </PageLayout>\r\n    )\r\n}\r\n\r\nconst details = {\r\n    page: 'Docker'\r\n  }\r\n\r\nexport default DevOps\r\n"]},"metadata":{},"sourceType":"module"}