{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\747049\\\\Desktop\\\\craigio\\\\HOC\\\\navigationBlocks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useRef, useEffect } from 'react';\n\nconst navigationBlock = ({\n  viewSection\n}) => {\n  // const [isVisible, setVisible] = useState(false);\n  const domRef = useRef();\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        console.log('hello');\n        viewSection();\n      }\n    });\n    observer.observe(domRef.current);\n    return () => observer.unobserve(domRef.current);\n  }, []);\n  return __jsx(\"div\", {\n    ref: domRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default navigationBlock;","map":{"version":3,"sources":["C:/Users/747049/Desktop/craigio/HOC/navigationBlocks.js"],"names":["useState","useRef","useEffect","navigationBlock","viewSection","domRef","observer","IntersectionObserver","entries","isIntersecting","console","log","observe","current","unobserve","props","children"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACzC;AACA,QAAMC,MAAM,GAAGJ,MAAM,EAArB;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMI,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,OAAO,IAAI;AACnD,UAAGA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAd,EAA6B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAP,QAAAA,WAAW;AACd;AACA,KALc,CAAjB;AAOAE,IAAAA,QAAQ,CAACM,OAAT,CAAiBP,MAAM,CAACQ,OAAxB;AACA,WAAO,MAAMP,QAAQ,CAACQ,SAAT,CAAmBT,MAAM,CAACQ,OAA1B,CAAb;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SACE;AAAK,IAAA,GAAG,EAAER,MAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGU,KAAK,CAACC,QADT,CADF;AAKD,CAnBH;;AAqBA,eAAeb,eAAf","sourcesContent":["import { useState, useRef, useEffect } from 'react'\r\n\r\nconst navigationBlock = ({ viewSection }) => {\r\n    // const [isVisible, setVisible] = useState(false);\r\n    const domRef = useRef();\r\n    useEffect(() => {\r\n      const observer = new IntersectionObserver(entries => {\r\n        if(entries[0].isIntersecting){\r\n            console.log('hello')\r\n            viewSection()\r\n        }\r\n        });\r\n\r\n      observer.observe(domRef.current);\r\n      return () => observer.unobserve(domRef.current);\r\n    }, []);\r\n    return (\r\n      <div ref={domRef}>\r\n        {props.children}\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default navigationBlock"]},"metadata":{},"sourceType":"module"}