{"version":3,"file":"static/webpack/static\\development\\pages\\framework\\react.js.933d5378037af6ea4979.hot-update.js","sources":["webpack:///./pages/framework/react.js"],"sourcesContent":["// import React from 'react'\r\nimport mainLayout from '../../HOC/mainLayout'\r\n// import \"../css/style.css\"\r\n\r\nconst Node = () => {\r\n    return (\r\n        <>\r\n            <p>\r\n                After learning HTML and interacting with the DOM using vanilla javascript and JQuery,\r\n                I decided to learn React as I heard it was great for code reuse and scailability.\r\n\r\n                I took a couple of courses and found that I really enjoyed working with React and \r\n                use it as my go-to framework for building interactive UIs. \r\n            </p>\r\n            <p>\r\n                For larger projects I've used Redux for state-management; however, I've found the \r\n                context API to be a very useful too and have used it on a couple of small projects.\r\n            </p>\r\n            <p>\r\n                making dynamic websites has been really easy with React; I've also found that the \r\n                ability to make higher Order components to be really useful to include additional functionality\r\n                to components.\r\n            </p>\r\n            <p>\r\n                The nice thing about React is that it is very familiar to React Native. Though I've \r\n                only created a couple of small react-native test projects, I'm hoping to create a production\r\n                version application in the future.\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nconst details = {\r\n    page: 'react & Redux'\r\n  }\r\n\r\nexport default mainLayout(details)(Node)\r\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AADA;AAIA;;;;A","sourceRoot":""}